# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

image: nikolaik/python-nodejs:latest

stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - publish
  - deploy

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

build-job: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - python3 -m pip install -e backend
    - flask init-db
    - cd saffron_motion && yarn install
    - echo "Compile complete."

unit-test-job: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 5-10 seconds."
    - cd saffron_motion && yarn install && yarn test
    - echo "Code coverage is not established."

# e2e-test-job: # This job also runs in the test stage.
#   stage: test # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Testing code... "
#     - cd saffron_motion && apt update && |
#       apt install xvfb libgtk2.0-0 libgtk-3-0 |
#       libgbm-dev libnotify-dev libgconf-2-4 libnss3 |
#       libxss1 libasound2 libxtst6 xauth |
#       xvfb && cypress run
#     - echo "No lint issues found."

publish-job:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  script:
    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST


deploy-job: # This job runs in the deploy stage.
  stage: deploy # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - echo "Deploy target not established."
